from typing import Callable, Union

import numpy as np
from scipy.stats import ks_2samp

from sklearn.metrics import make_scorer

from pandas import DataFrame, Series

DataArray = Union[np.ndarray, Series, DataFrame]

def ks(y_true : DataArray, y_pred : DataArray) -> float:
    """
    This function calculates the Kolmogorov-Smirnov statistic between two classes in a binary classifier.

    Args:
        y_true (np.array): An array containing the true values.
        y_pred (np.array): The predictions/scores generated by the model.

    Returns:
        float: The K-S statistic.
    """

    class0 = y_pred[y_true == 0]
    class1 = y_pred[y_true == 1]
    result = ks_2samp(class0, class1).statistic
    return result

ks_score : Callable[[np.ndarray, np.ndarray], float] = make_scorer(ks, needs_proba=True)